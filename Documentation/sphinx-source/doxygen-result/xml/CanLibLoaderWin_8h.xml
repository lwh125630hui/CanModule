<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="CanLibLoaderWin_8h" kind="file">
    <compoundname>CanLibLoaderWin.h</compoundname>
    <includes local="no">windows.h</includes>
    <includes local="no">strsafe.h</includes>
    <includes refid="CanLibLoader_8h" local="yes">CanLibLoader.h</includes>
    <includedby refid="CanLibLoaderWin_8cpp" local="yes">CanLibLoader/src/CanLibLoaderWin.cpp</includedby>
    <incdepgraph>
      <node id="470">
        <label>CCanAccess.h</label>
        <link refid="CCanAccess_8h"/>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
      </node>
      <node id="476">
        <label>stdatomic.h</label>
      </node>
      <node id="480">
        <label>LogIt.h</label>
      </node>
      <node id="465">
        <label>windows.h</label>
      </node>
      <node id="467">
        <label>CanLibLoader.h</label>
        <link refid="CanLibLoader_8h"/>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>CanStatistics.h</label>
        <link refid="CanStatistics_8h"/>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
      </node>
      <node id="473">
        <label>boost/signals2.hpp</label>
      </node>
      <node id="466">
        <label>strsafe.h</label>
      </node>
      <node id="464">
        <label>CanLibLoader/include/CanLibLoaderWin.h</label>
        <link refid="CanLibLoaderWin.h"/>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
      </node>
      <node id="468">
        <label>string</label>
      </node>
      <node id="469">
        <label>map</label>
      </node>
      <node id="474">
        <label>CanMessage.h</label>
        <link refid="CanMessage_8h"/>
        <childnode refid="471" relation="include">
        </childnode>
      </node>
      <node id="479">
        <label>VERSION.h</label>
        <link refid="VERSION_8h"/>
      </node>
      <node id="477">
        <label>ExportDefinition.h</label>
        <link refid="ExportDefinition_8h"/>
      </node>
      <node id="471">
        <label>sys/time.h</label>
      </node>
      <node id="472">
        <label>boost/bind.hpp</label>
      </node>
      <node id="478">
        <label>chrono</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="481">
        <label>CanLibLoader/include/CanLibLoaderWin.h</label>
        <link refid="CanLibLoaderWin.h"/>
        <childnode refid="482" relation="include">
        </childnode>
      </node>
      <node id="482">
        <label>CanLibLoader/src/CanLibLoaderWin.cpp</label>
        <link refid="CanLibLoaderWin_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classCanModule_1_1CanLibLoaderWin" prot="public">CanModule::CanLibLoaderWin</innerclass>
    <innernamespace refid="namespaceCanModule">CanModule</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="CanLibLoaderWin_8h_1a8d9ac41ded5e14e0ced0dc41b3fb5258" prot="public" static="no">
        <name>_WINSOCKAPI_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Â© Copyright CERN, 2015. All rights not expressly granted are reserved.</para><para><ref refid="CanLibLoaderWin_8h" kindref="compound">CanLibLoaderWin.h</ref></para><para>Created on: Feb 22, 2012 Author: vfilimon mludwig at cern dot ch</para><para>This file is part of Quasar.</para><para>Quasar is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public Licence as published by the Free Software Foundation, either version 3 of the Licence.</para><para>Quasar is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public Licence for more details.</para><para>You should have received a copy of the GNU Lesser General Public License along with Quasar. If not, see <ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mludwig/projects/CanModule/CanModule#master/CanModule/CanLibLoader/include/CanLibLoaderWin.h" line="25" column="10" bodyfile="/home/mludwig/projects/CanModule/CanModule#master/CanModule/CanLibLoader/include/CanLibLoaderWin.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="24"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="25" refid="CanLibLoaderWin_8h_1a8d9ac41ded5e14e0ced0dc41b3fb5258" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_WINSOCKAPI_</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strsafe.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CanLibLoader_8h" kindref="compound">CanLibLoader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CanModule</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33" refid="classCanModule_1_1CanLibLoaderWin" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCanModule_1_1CanLibLoaderWin" kindref="compound">CanLibLoaderWin</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanLibLoader" kindref="compound">CanLibLoader</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>system<sp/>error<sp/>reporter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanLibLoaderWin_1ab8df128060b2e76465da474e4fdc8ad5" kindref="member">ErrorExit</ref>(LPTSTR<sp/>lpszFunction);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Empty<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCanModule_1_1CanLibLoaderWin_1a52236485330327832d4a282ea370df54" kindref="member">CanLibLoaderWin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>libName);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Will<sp/>cleanup<sp/>the<sp/>loaded<sp/>dynamic<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanLibLoaderWin_1a39da78f1fde4fef2b6b17107e6767962" kindref="member">~CanLibLoaderWin</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Load<sp/>a<sp/>dynamic<sp/>library.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCanModule_1_1CanLibLoaderWin_1a8206b2ad7d352ecb8e119b55d2069bc0" kindref="member">dynamicallyLoadLib</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>libName);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Uses<sp/>the<sp/>loaded<sp/>library<sp/>to<sp/>create<sp/>a<sp/>HAL<sp/>object<sp/>and<sp/>store<sp/>it<sp/>in<sp/>p_halInstance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><sp/><ref refid="classCanModule_1_1CCanAccess" kindref="compound">CCanAccess</ref>*<sp/><ref refid="classCanModule_1_1CanLibLoaderWin_1adcc42606c727f4ca010ad08719d88a18" kindref="member">createCanAccess</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Pointer<sp/>to<sp/>the<sp/>dynamic<sp/>library<sp/>stored<sp/>on<sp/>the<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classCanModule_1_1CanLibLoaderWin_1a76d6eda73211a94f68dca4cb637394e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HMODULE<sp/><ref refid="classCanModule_1_1CanLibLoaderWin_1a76d6eda73211a94f68dca4cb637394e8" kindref="member">m_pDynamicLibrary</ref>;<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mludwig/projects/CanModule/CanModule#master/CanModule/CanLibLoader/include/CanLibLoaderWin.h"/>
  </compounddef>
</doxygen>
